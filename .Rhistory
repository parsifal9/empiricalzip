ls
FDRCalculation
FDRCalculation
n
Q
my.FDRCalculation
my.FDRCalculation(n,C,D,f1binomial,eta,lambda,theta,pi0,iterations,FDRLevel)
 data <- mixture(n=n,C=C,D=D,f1binomial=f1binomial,eta=eta[e],lambda=lambda[l],theta=theta[t],pi=pi0[p],seed=seed)
dim(data)
hed(data)
head(data)
data[,1:10]
null[1,]
dataTabulate 
data[,1:100]
data[2,]
data[1,]
length(eta)
length(lambda)
length(theta)
length(pi0)
iterations
 count 
date
temp
dim(count)
head(count)
head(temp)
dim(x)
head(x)
length(x)
sum(temp)
plot(x)
zigpEMAlgorithm(x)
head9count)
head(count)
aa<-zigpEMAlgorithm(x)
plot(aa[1,])
plot(aa[1,],type="l")
plot(aa[2,],type="l")
plot(aa[3,],type="l")
Q
head(x)
head(x)
print(n)
head(temp)
head(x)
null
head(x)
dim(data)
load("~/x.Rdata")
length(eta)
CUT
cut
di(cut)
dim(cut)
dim(pi)
dim(psi)
model <-1
 min(1, sum(count[1:(i+1)])/(M*f0(estimate[e,l,t,p,model,1,i],estimate[e,l,t,p,model,2,i],estimate[e,l,t,p,model,3,i],C=i)))
print(n)
min(1, sum(count[1:(i+1)])/(M*f0(estimate[e,l,t,p,model,1,i],estimate[e,l,t,p,model,2,i],estimate[e,l,t,p,model,3,i],C=i)))
max(x)
i<-1
 min(1, sum(count[1:(i+1)])/(M*f0(estimate[e,l,t,p,model,1,i],estimate[e,l,t,p,model,2,i],estimate[e,l,t,p,model,3,i],C=i)))
estimate <- array(NA, c(length(eta),length(lambda),length(theta),length(pi0),4,3,max(x)))
e
1
t
p
1
dim9estimate)
dim)estimate)
dim(estimate)
min(1, sum(count[1:(i+1)])/(M*f0(estimate[e,l,t,p,model,1,i],estimate[e,l,t,p,model,2,i],estimate[e,l,t,p,model,3,i],C=i)))
length(x[which(x<=i)])*(-log(sum(count[1:(i+1)] + cf)/M)) + length(x[which(x>i)])*(-log(1 + cf - sum(count[1:(i+1)] + cf)/M))
length(eta)
length(theta)
pi0
 estimate <- array(NA, c(4,3,max(x)))  #1   1   1   1   4   3 220
dim(estimate)
FDRLevel
Q
dim(cut)
k
 min(which(diff(sign(diff(cut)))>0)+2, which.min(cut))
Q
negLogLh(x=x,estimate[1,i],estimate[2,i],estimate[3,i],C=i)
i<-1
negLogLh(x=x,estimate[1,i],estimate[2,i],estimate[3,i],C=i)
negLogLh(x=x,estimate[1,i],estimate[2,i],estimate[3,i],C=i)
min(which(diff(sign(diff(cut)))>0)+2, which.min(cut))
pi
psi
count
dim(estimate)
min(1, sum(count[1:(i+1)])/(M*f0(estimate[1,i],estimate[2,i],estimate[3,i],C=i)))
min(which(diff(sign(diff(cut)))>0)+2, which.min(cut))
which(diff(sign(diff(cut[e,l,t,p,1,model,])))>0)
which(diff(sign(diff(cut)))>0)
(diff(cut))
cut
estimate[1,i]
cut
C
negLogLh(x=x,estimate[1,i],estimate[2,i],estimate[3,i],C=i)
 psi[2,i] 
psi[2,i] + negLogLh(x=x,estimate[1,i],estimate[2,i],estimate[3,i],C=i)
psi[2,i] + negLogLh(x=x,estimate[1,i],estimate[2,i],estimate[3,i],C=i)
psi[2,i] 
 log(M)*length(x[which(x > i)]) - sum(count[(i + 2):(max(x) + 1)]*(log(count[(i + 2):(max(x) + 1)] + cf)))
length(x[which(x<=i)])*(-log(sum(count[1:(i+1)] + cf)/M)) + length(x[which(x>i)])*(-log(1 + cf - sum(count[1:(i+1)] + cf)/M))
pi
psi
cf
cat("aa")
 cat(min(1, sum(count[1:(i+1)])/(M*f0(estimate[1,i],estimate[2,i],estimate[3,i],C=i))),"\n")
max(x)
i
length(x[which(x<=i)])*(-log(sum(count[1:(i+1)] + cf)/M)) + length(x[which(x>i)])*(-log(1 + cf - sum(count[1:(i+1)] + cf)/M))
dim(psi)
psi[1,i] <- length(x[which(x<=i)])*(-log(sum(count[1:(i+1)] + cf)/M)) + length(x[which(x>i)])*(-log(1 + cf - sum(count[1:(i+1)] + cf)/M))
psi
log(M)*length(x[which(x > i)]) - sum(count[(i + 2):(max(x) + 1)]*(log(count[(i + 2):(max(x) + 1)] + cf)))
psi[2,i] <- log(M)*length(x[which(x > i)]) - sum(count[(i + 2):(max(x) + 1)]*(log(count[(i + 2):(max(x) + 1)] + cf)))
psi
psi
i
psi
i
max(x)
Q
 n
C
D
eta
lambda
theta
pi0
iterations
estimate
i
i<-1
i<-2
i<-10
pi[i] <- min(1, sum(count[1:(i+1)])/(M*f0(estimate[1,i],estimate[2,i],estimate[3,i],C=i)))
(pi[i] <- min(1, sum(count[1:(i+1)])/(M*f0(estimate[1,i],estimate[2,i],estimate[3,i],C=i))))
max(x)
log(M)*length(x[which(x > i)]) - sum(count[(i + 2):(max(x) + 1)]*(log(count[(i + 2):(max(x) + 1)] + cf))))
log(M)*length(x[which(x > i)]) - sum(count[(i + 2):(max(x) + 1)]*(log(count[(i + 2):(max(x) + 1)] + cf)))
 log(M)
length(x[which(x > i)]) 
sum(count[(i + 2):(max(x) + 1)]*(log(count[(i + 2):(max(x) + 1)] + cf))
)
count[(i + 2):(max(x) + 1)
]
count
i
(max(x) + 1)
count[(i + 2):(max(x) + 1)]
cut
C)
C0
C0
CO
e
ceiling(max((CO + 1),Dn(estimate[2,CO],estimate[3,CO],n) ))
C0
C0
CO
length(null[,which(null[1,] <= C)][1,])
ls()
 estimate[1,CO]
lfdr(pi=E,x=sort(nonNull[1,][which(nonNull[1,] > (AD - 1))]),eta=E[1],lambda=E[2],theta=E[3],Q=f14(data=data,n=n,C=C,CO,D=AD)
)
lfdr(pi=E,x=sort(nonNull[1,][which(nonNull[1,] > (AD - 1))]),eta=E[1],lambda=E[2],theta=E[3],Q=f14(data=data,n=n,C=C,CO,D=AD)[[4]])
length(lfdr(pi=E,x=sort(nonNull[1,][which(nonNull[1,] > (AD - 1))]),eta=E[1],lambda=E[2],theta=E[3],Q=f14(data=data,n=n,C=C,CO,D=AD)[[4]]))
 pi=E
E
sort(nonNull[1,][which(nonNull[1,] > (AD - 1))])
length(sort(nonNull[1,][which(nonNull[1,] > (AD - 1))]))
C
C0
XCO
CO
AD
f14(data=data,n=n,C=C,CO,D=AD)
f14(data=data,n=n,C=C,CO,D=AD)[[4]]
traceback()
E
E
lfdr
gpdMixture(x=x,eta=E[1],lambda=E[2],theta=E[3])
length(gpdMixture(x=x,eta=E[1],lambda=E[2],theta=E[3]))
pi
lfdr
f14(data=data,n=n,C=C,CO,D=AD)[[4]])
f14(data=data,n=n,C=C,CO,D=AD)[[4]]
length(f14(data=data,n=n,C=C,CO,D=AD)[[4]]
)
pi*gpdMixture(x=x,eta=eta,lambda=lambda,theta=theta)*f14(data=data,n=n,C=C,CO,D=AD)[[4]]
plot(P4)
dim(data)
head(data)
length(P4)
dim(temp)
rm(list=ls())
a=c(1,2,3,4,)
a=c(1,2,3,4,5)
a=c(1,2,3,4,5)
system.time(a=c(1,2,3,4,5))
f<-function(){ date()}
f(a=c(1,2,3,4,5))
dim(data)
C
x
C
n
zigpEMAlgorithm(x)
q()
n
 RealDataFDR
Q
Q
Q
file
 file <- "./biom12779-sup-0003-suppdata.txt"
file
 estimate[1,,]
model<-1
pi[model,] 
i
max(x)
pi
model1
model
psi
estimate[model,1,i]
i
min(1, sum(count[1:(i+1)])/(M*f0(estimate[model,1,i],estimate[model,2,i],estimate[model,3,i],C=i)))
i<-1
min(1, sum(count[1:(i+1)])/(M*f0(estimate[model,1,i],estimate[model,2,i],estimate[model,3,i],C=i)))
pi[model,i]
pi
i
Q
pi
xi
cut
cut[,1,]
CO
Q
AD
method<-1
model<-1
E
E[1,1,]
E[1,1,]
LFDR
dim(LFDR)
U1
R
U2
R
BH
cbind(R[,,1],R[,,2], BH)
 rbind(E[1,1,],E[1,2,],E[1,3,],E[1,4,])
rbind(E[2,1,],E[2,2,],E[2,3,],E[2,4,])
Q
q()
n
pi[CO]
gpdMixture(x=sort(x),estimate[1,CO],estimate[2,CO],estimate[3,CO])*f12(sort(x),length(x))
head(gpdMixture(x=sort(x),estimate[1,CO],estimate[2,CO],estimate[3,CO])*f12(sort(x),length(x)))
eta
 M/length(x[which(x==x[i])])
i
f12(x)
length(x)
length(x,366)
f12(x,366)
length(x)
x[1:10]
f12(x[1:10],10)
which(x==x[1])
match(x[1],x)
 gpdMixture(x,2.6,3.1,2.2)
x
 gpdMixture(x,2.6,3.1,2.2)
x
x
 gpdMixture(x,2.6,3.1,2.2)
x
x
x
x[11]<-0
head(gpdMixture(x=sort(x),estimate[1,CO],estimate[2,CO],estimate[3,CO]))
estimate[1,CO]
)
head(gpdMixture(x=sort(x),estimate[1,CO],estimate[2,CO],estimate[3,CO])
)
head(gpdMixture(x=sort(x),estimate[1,CO],estimate[2,CO],estimate[3,CO]))
tail(gpdMixture(x=sort(x),estimate[1,CO],estimate[2,CO],estimate[3,CO]))
pi[CO]
pi
 2901.987 /60
sourceCpp("my_gpdMixture.cpp")
load("~/x.Rdata")
load("./x.Rdata")
length(x)
 x<-sample(x,1000)
length(x)
rm(list=ls())
empiricalzip
estimate <- zipEMAlgorithm(x)
search()
detach(2)
search()
load_all()
setwd("./empiricalzip")
load_all()
q()
n
system("pwd")
setwd("./empiricalzip")
load_all()
zigpEMAlgorithm
search()
system(("pwd")
system("pwd")
setwd("./empiricalzip/")
install()
serach()
search()
zigpEMAlgorithm
install()
install()
pwd
system("pwd")
setwd("./empiricalzip/")
document()
 zigpEMAlgorithm
q()
n
zigpEMAlgorithm
gpdMixture
system("pwd")
gpdMixture
zigpEMAlgorithm
rcpp_hello_world()
gpdMixture
zigpEMAlgorithm
estimate <- zigpEMAlgorithm(x)
gpdMixture
zigpEMAlgorithm
q()
n
q()
n
gpdMixture
rcpp_hello_world()
libraryh(RcppExamples)
library(RcppExamples)
Rcpp:::compileAttributes
Rcpp:::compileAttributes()
q()
n
zigpEMAlgorithm
gpdMixture
gpdMixture
head(gpdMixture(x=sort(x),estimate[1,CO],estimate[2,CO],estimate[3,CO])
)
head(gpdMixture(x=sort(x),estimate[1,CO],estimate[2,CO],estimate[3,CO])
)
q()
n
system("pwd")
setwd("../")
estimate
gpdMixture
head(LFDR )
LFDR <- pi[CO]*gpdMixture(x=sort(x),estimate[1,CO],estimate[2,CO],estimate[3,CO])
LFDR <- gpdMixture(x=sort(x),estimate[1,CO],estimate[2,CO],estimate[3,CO])
head(LFDR )
pi[CO]
pi
zigpEMAlgorithm
head(x)
tail(x)
zigpEMAlgorithm
zigpEMAlgorithm
zigpEMAlgorithm
f12
trace("f12",quote({browser(skipCalls = 4)}), at=1, print=TRUE,where=asNamespace("empiricalzip"))
f12(c(1:100),100)
as.list(body(f12))
untrace("f12",where=asNamespace("empiricalzip"))
trace("f12",quote({browser(skipCalls = 4)}), at=2, print=TRUE,where=asNamespace("empiricalzip"))
f12(c(1:100),100)
untrace("f12",where=asNamespace("empiricalzip"))
trace("empiricalzip:::f12",quote({browser(skipCalls = 4)}), at=2, print=TRUE,where=asNamespace("empiricalzip"))
trace("empiricalzip::f12",quote({browser(skipCalls = 4)}), at=2, print=TRUE,where=asNamespace("empiricalzip"))
zigpEMAlgorithm
trace("glm", browser, at = 4, where = asNamespace("stats"))
glm
?glm
history()
untrace("glm", where = asNamespace("stats"))
glm
body(stats::glm)[1:5]
Q
Q
Q
i<-1
phi
 head(x)
u1
B
Q
zigpEstimate
u1
u2
u3
u4
u5
u6
u7
u8
u9
v1
v2
v3
D
B
Q
u1<-0
zigpEstimate
i
D
print(D)
Q
i
i<-1
thetaEstimate
(((abs(hold.eta - etaEstimate)) > epsilon) || ((abs(hold.lambda - lambdaEstimate)) > epsilon) || ((abs(hold.theta - thetaEstimate)) >  epsilon))
thetaEstimate 
 zigpEstimate
Q
estimate <- zigpEMAlgorithm(x)
 zigpEMAlgorithm
q()
n
 ?pEMAlgorithm 
pEMAlgorithm 
?protein
data(protein)
?protein
?protein
pEMAlgorithm
?pEMAlgorithm
?pEMAlgorithm
q()
n
q()
n
